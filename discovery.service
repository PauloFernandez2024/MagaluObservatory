[Unit]
Description=Metric Discovery Service
After=network.target

[Service]
ExecStart=/usr/bin/python3 /caminho/absoluto/discovery.py
WorkingDirectory=/caminho/absoluto
Restart=on-failure
User=your_user
Environment=PYTHONUNBUFFERED=1
StandardOutput=journal
StandardError=journal

[Install]
WantedBy=multi-user.target


####################################################
sudo systemctl daemon-reload
sudo systemctl enable discovery.service
sudo systemctl start discovery.service
sudo journalctl -u discovery.service -f


####################################################
Alertas com Prometheus + Alertmanager
Passo 1: Regra de exemplo
Exemplo em prometheus.rules.yml:

####################################################
groups:
  - name: health.rules
    rules:
      - alert: DeviceHealthCritical
        expr: device_health_status{status="CRITICAL"} == 1
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Health status CRITICAL para {{ $labels.device }}"
          description: "{{ $labels.metric }} est√° em status CRITICAL na janela {{ $labels.window }}"
####################################################
Passo 2: Adicione √† configura√ß√£o do Prometheus
rule_files:
  - "prometheus.rules.yml"
####################################################

1. Configura√ß√£o do prometheus.yml para coletar do PushGateway
No seu prometheus.yml, adicione uma se√ß√£o scrape_configs como esta:

yaml
Copiar
Editar
scrape_configs:
  - job_name: 'pushgateway'
    static_configs:
      - targets: ['localhost:9091']  # Ajuste se o PushGateway estiver em outro host
Isso permite que o Prometheus colete as m√©tricas que seu discovery.py envia via push_to_gateway.

‚úÖ 2. Dashboard no Grafana
Agora que o Prometheus coleta os dados do PushGateway, voc√™ pode configurar um dashboard no Grafana. Sugest√£o de painel:

a. Painel de Status por Dispositivo
Query (status):

promql
Copiar
Editar
device_health_status
Transforma√ß√£o (se desejar tabela):

Agrupar por: device, window, category, status

Visualiza√ß√£o: Table ou Stat (com contagem por status)

b. Painel de Evolu√ß√£o por Janela de Tempo
Query (valor m√©dio ao longo do tempo):

promql
Copiar
Editar
avg_over_time(device_health_value_mean[1h])
Filtro por labels:

job, device, category, window

Visualiza√ß√£o: Time series (por exemplo, "network health (mean)")

c. Painel de Dispositivos em Estado CR√çTICO
Query:

promql
Copiar
Editar
device_health_status{status="CRITICAL"}
Visualiza√ß√£o: Stat com contagem ou lista com device, category

############################################################################

1. Configura√ß√£o do prometheus.yml
Adicione a seguinte configura√ß√£o no seu prometheus.yml:

yaml
Copiar
Editar
scrape_configs:
  - job_name: 'health_pushgateway'
    honor_labels: true
    static_configs:
      - targets: ['localhost:9091']
‚ö†Ô∏è Importante: Ajuste localhost:9091 se o PushGateway estiver rodando em outro host ou porta.

‚úÖ 2. Verificar que o export_health() est√° enviando para o PushGateway
Voc√™ j√° tem:

python
Copiar
Editar
push_to_gateway("http://localhost:9091", job=f"health_{job}", registry=registry)
Est√° correto, e as m√©tricas est√£o sendo "empurradas" (push) com os r√≥tulos corretos.

‚úÖ 3. Importar no Grafana
No Grafana:

V√° at√© o menu lateral ‚Üí "Dashboards" ‚Üí "New" ‚Üí "Add new panel".

Use consultas PromQL como estas:

promql
Copiar
Editar
device_health_status
Para filtrar por job, status, ou categoria:

promql
Copiar
Editar
device_health_status{job="server", status="CRITICAL"}
Exemplo com mean:

promql
Copiar
Editar
device_health_value_mean{category="bandwidth", window="5m"}
‚úÖ 4. Sugest√£o de Pain√©is no Grafana
üî¥ Painel de Status Geral: Contagem de device_health_status agrupado por status

üìä Heatmap por Categoria: M√©dia dos valores (mean) por janela e categoria

üìà S√©rie Temporal: device_health_value_mean por dispositivo

############################################################################################

